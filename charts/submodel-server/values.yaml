# Default values for submodel-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: submodel-server
  pullPolicy: Never
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: submodel.cx.the-sense.io
      paths:
        - path: /
          pathType: Prefix
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 250m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 128Mi

configmap:
  create: true
  data:
    APPLICATION_PORT: "8080"
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres.postgres.svc.cluster.local:5432/trace-BE
secret:
  create: true
  data:
    SPRING_DATASOURCE_USERNAME: <path:submodel-server/data/database#user>
    SPRING_DATASOURCE_PASSWORD: <path:submodel-server/data/database#password>

# -- Determine whether a pod is alive or dead
livenessProbe:
  # -- Whether to enabled the liveness check or not
  enabled: false
  # -- Number of seconds to wait before performing the first liveness probe
  initialDelaySeconds: 60
  # -- Number of seconds to wait between consecutive probes
  periodSeconds: 10
  # -- Number of consecutive successful probes before a pod is considered healthy
  successThreshold: 1
  # -- Number of consecutive failed probes before a pod is considered unhealthy
  failureThreshold: 3
  # -- Number of seconds after which a liveness probe times out
  timeoutSeconds: 5
  # -- HTTP endpoint
  path: /api/app/actuator/health
  # -- Port used
  port: 8000

# -- Determine when a pod is ready to start accepting requests
readinessProbe:
  # -- Whether to enabled the readiness check or not
  enabled: false
  # -- Number of seconds to wait before performing the first readiness probe
  initialDelaySeconds: 60
  # -- Number of seconds to wait between consecutive probes
  periodSeconds: 10
  # -- Number of consecutive successful probes before a pod is considered healthy
  successThreshold: 1
  # -- Number of consecutive failed probes before a pod is considered unhealthy
  failureThreshold: 3
  # -- Number of seconds after which a readiness probe times out
  timeoutSeconds: 5
  # -- HTTP endpoint
  path: /api/app/actuator/health
  # -- Port used
  port: 8080

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
